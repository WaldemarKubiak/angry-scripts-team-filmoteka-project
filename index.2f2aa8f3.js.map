{"mappings":"AAAAA,OAAOC,iBAAiB,QAAQ,KAC9B,MAAMC,EAASC,SAASC,cAAc,WAEtCF,EAAOG,UAAUC,IAAI,iBAErBJ,EAAOD,iBAAiB,iBAAiB,KACvCE,SAASI,KAAKC,YAAY,YAC5B,ICPF,MAAMC,EAAU,mC,IAmEhBC,EADY,C,YA5CQC,UAClB,IACE,MAAMC,EAAe,4DAA4DH,IAC3EI,QAAiBC,MAAMF,GAE7B,aADmBC,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,aAcmBR,MAAMS,IACzB,IACE,MAAMC,EAAsB,sCAAsCD,aAAcX,IAC1EI,QAAiBC,MAAMO,GAE7B,aADmBR,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,UAGgBR,MAAMW,IACtB,IACE,MAAMC,EAAuB,qDAAqDd,WAAiBa,IAC7FT,QAAiBC,MAAMS,GAE7B,aADmBV,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,UA9BgBR,UAChB,IACE,MAAMa,EAAa,yDAAyDf,mBACtEI,QAAiBC,MAAMU,GAE7B,aADmBX,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,ICvCK,SAASM,GAAYC,MAAEA,EAAKC,SAAEA,EAAQC,YAAEA,IAC7C,MAAMC,EAAa1B,SAASC,cAAc,gBAEpC0B,EAAS,iGAE+BF,4HAETF,yJAGIC,4SAWnCI,EAAgB5B,SAAS6B,cAAc,OAC7CD,EAAc1B,UAAUC,IAAI,0BAC5ByB,EAAcE,UAAYH,EAE1BD,EAAWK,OAAOH,GAElB,MAAMI,EAAQhC,SAASC,cAAc,gBACrC+B,EAAM9B,UAAU+B,OAAO,uBAEDjC,SAASC,cAAc,sBAC/BH,iBAAiB,SAAS,KACtCkC,EAAM9B,UAAUC,IAAI,uBACpByB,EAAcE,UAAY,KAE9B,C,ICUAI,EAhC8BC,IAC5B,MAAMC,EAAqBpC,SAASC,cAAc,qBAE5C0B,EAASQ,EACZE,KACC,EAACpB,GAAEA,EAAEM,MAAEA,EAAKE,YAAEA,EAAWa,aAAEA,KAAmB,oCAAoCrB,uDACvCQ,6GAEVF,2JAGI,IAAIgB,KAAKD,GAAcE,mEAM7DC,KAAK,IAERL,EAAmBN,UAAYH,EAET3B,SAAS0C,iBAAiB,eAClCC,SAAQC,IACpBA,EAAU9C,iBAAiB,SAAS+C,IAClC,MAAMC,EAAUD,EAAME,cAAcC,QAAQ/B,GAC5CV,EAAI0C,aAAaH,GACdI,KAAK5B,GACL6B,OAAMtC,GAASC,QAAQC,IAAIF,EAAMG,UAAO,GAC7C,GACF,ECzCFT,EAAI6C,cACDF,MAAKG,GAAQA,EAAKC,UAClBJ,KAAKhB,GACLiB,OAAMtC,GAASC,QAAQD,MAAMA,EAAMG,WCJtC,MAGMuC,EAAcvD,SAASC,cAAc,iBACrCuD,EAAaxD,SAASC,cAAc,gBACxBD,SAASC,cAAc,eAczCuD,EAAW1D,iBAAiB,UAAU2D,IACpCA,EAAEC,iBACF,MAAMvC,EAAQoC,EAAYI,MACZ,KAAVxC,GAbkB,CAAAA,IACtBR,MAAM,4FAAqDQ,KACxD+B,MAAKxC,GAAYA,EAASE,SAC1BsC,MAAKG,IACJvC,QAAQC,IAAIsC,EAAKC,SACjBpB,EAAsBmB,EAAKC,QAAO,IAEnCH,OAAMtC,GAASC,QAAQD,MAAMA,IAAA,EAQhC+C,CAAgBzC,EAAA","sources":["src/js/loader.js","src/js/api.js","src/js/movie-modal.js","src/js/renderMovieCollection.js","src/js/main-section-home.js","src/js/searchByKeyword.js"],"sourcesContent":["window.addEventListener('load', () => {\n  const loader = document.querySelector('.loader');\n\n  loader.classList.add('loader-hidden');\n\n  loader.addEventListener('transitionend', () => {\n    document.body.removeChild('loader');\n  });\n});\n","const API_KEY = '7181a2b710caf29c7153fca4f71ab7d2';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\n//---Przykładowe zapytanie do api---///\n//---`${MAIN_URL}/movie/550?api_key=${API_KEY}`;---///\n\n// getTrending() - zaczytuje trendujące filmy z ostatniego tygodnia,\n// getMovies(query) - zaczytuje filmy wg wpisanego stringa przekazanego jako parametr,\n// getMovieByID(id) - zaczytuje dane filmu wg id,\n// getGenres() - zaczytuje tablicę z gatunkami filmów\n//\n// W następnej wersji do pierwszych dwóch funkcji dodam parametr page (z domyślna wartością = 1)\n// tak, aby funkcji można było użyc do paginacji\n//\n// Aby zaimportować API wpisz:\n//\n// import API from './api'\n//\n// Aby wywołąć pojedynczą funkcję wpisz np:\n//\n// API.getMovies(query)\n\nconst getTrending = async () => {\n  try {\n    const TRENDING_URL = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    const response = await fetch(TRENDING_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getGenres = async () => {\n  try {\n    const GENRES_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(GENRES_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovieByID = async id => {\n  try {\n    const GET_MOVIE_BY_ID_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n    const response = await fetch(GET_MOVIE_BY_ID_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovies = async query => {\n  try {\n    const GET_MOVIES_QUERY_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n    const response = await fetch(GET_MOVIES_QUERY_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst API = { getTrending, getMovieByID, getMovies, getGenres };\nexport default API;\n","import API from './api';\n\nexport function renderModal({ title, overview, poster_path }) {\n  const movieModal = document.querySelector('.movie-modal');\n\n  const markup = `\n    <div class=\"movie-modal__img-container\">\n     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"\" class=\"movie-modal__img\"/></div>\n    <div class=\"movie-modal__content\">\n      <h2 class=\"movie-modal__title\">${title}</h2>\n      <div class=\"movie-modal__about\">\n        <h3 class=\"movie-modal__about-header\">ABOUT</h3>   \n        <p class=\"movie-modal__overview\">${overview}</p>\n    </div>\n      <div class=\"btn-wrapper\">\n        <button type=\"button\" class=\"button button--accent\" id=\"addToWatchedBtn\">\n          ADD TO WATCHED\n        </button>\n        <button type=\"button\" class=\"button\" id=\"addToQueueBtn\">ADD TO QUEUE</button>\n      </div>\n    </div>\n    `;\n\n  const movieModalDOM = document.createElement('div');\n  movieModalDOM.classList.add('movie-modal__container');\n  movieModalDOM.innerHTML = markup;\n\n  movieModal.append(movieModalDOM);\n\n  const modal = document.querySelector('[data-modal]');\n  modal.classList.remove('backdrop--is-hidden');\n\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n  closeModalBtn.addEventListener('click', () => {\n    modal.classList.add('backdrop--is-hidden');\n    movieModalDOM.innerHTML = '';\n  });\n}\n","// Funkcja renderMovieCollection(movieCollection) przyjmuje za parametr tablicę\n// z danymi filmów i renderuje ją do div o klasie \"movie-collection\"\n//\n// W kolejnej wersji zostanie dodane:\n// - renderowanie na karcie filmu oceny, która jest widoczna w zakładce MyLibrary,\n//   natomiast na stronie głównej zgodnie z układem na Figmie będzie ukryta,\n// - parsowanie genres do stringa - na razie jest string \"na sztywno\"\n//\n// Aby zaimportować funkcję wpisz:\n//\n// import renderMovieCollection from './renderMovieCollection';\n\nimport API from './api';\nimport { renderModal } from './movie-modal';\n\nconst renderMovieCollection = movieCollection => {\n  const movieCollectionDOM = document.querySelector('.movie-collection');\n\n  const markup = movieCollection\n    .map(\n      ({ id, title, poster_path, release_date }) => `<div class=\"movie-card\" data-id=\"${id}\">\n      <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"\" class=\"movie-card__img\"/>\n      <div class=\"movie-data\">\n        <p class=\"movie-data__title\">${title}</p>\n        <p class=\"movie-data__info\">\n          <span class=\"movie-data__genre\">Drama, Action</span> |\n          <span class=\"movie-data__year\">${new Date(release_date).getFullYear()}</span>\n        </p>\n      </div>\n    </div>\n`,\n    )\n    .join('');\n\n  movieCollectionDOM.innerHTML = markup;\n\n  const movieCardsArr = document.querySelectorAll('.movie-card');\n  movieCardsArr.forEach(movieCard => {\n    movieCard.addEventListener('click', event => {\n      const movieID = event.currentTarget.dataset.id;\n      API.getMovieByID(movieID)\n        .then(renderModal)\n        .catch(error => console.log(error.message));\n    });\n  });\n};\n\nexport default renderMovieCollection;\n","import API from './api';\nimport renderMovieCollection from './renderMovieCollection';\n\nAPI.getTrending()\n  .then(data => data.results)\n  .then(renderMovieCollection)\n  .catch(error => console.error(error.message));\n","///---to jako import!!!---///\n\nconst API_KEY = '7181a2b710caf29c7153fca4f71ab7d2';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\nconst searchInput = document.querySelector('.header-input');\nconst searchForm = document.querySelector('.header-form');\nconst movieList = document.querySelector('.movie-list');\n///----Tu zrobić import---////\nimport renderMovieCollection from './renderMovieCollection.js';\n\nconst searchByKeyword = query => {\n  fetch(`${MAIN_URL}/search/movie?api_key=${API_KEY}&query=${query}`)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data.results);\n      renderMovieCollection(data.results);\n    })\n    .catch(error => console.error(error));\n};\n\nsearchForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const query = searchInput.value;\n  if (query === '') return;\n\n  searchByKeyword(query);\n});\n"],"names":["window","addEventListener","loader","document","querySelector","classList","add","body","removeChild","$ffc195e62a2c7bf2$var$API_KEY","$ffc195e62a2c7bf2$export$2e2bcd8739ae039","async","TRENDING_URL","response","fetch","json","error","console","log","message","id","GET_MOVIE_BY_ID_URL","query","GET_MOVIES_QUERY_URL","GENRES_URL","$6a92d9ea7981a1dd$export$69bf191433722f78","title","overview","poster_path","movieModal","markup","movieModalDOM","createElement","innerHTML","append","modal","remove","$043545bfa8825083$export$2e2bcd8739ae039","movieCollection","movieCollectionDOM","map","release_date","Date","getFullYear","join","querySelectorAll","forEach","movieCard","event","movieID","currentTarget","dataset","getMovieByID","then","catch","getTrending","data","results","$9954e574549d774b$var$searchInput","$9954e574549d774b$var$searchForm","e","preventDefault","value","$9954e574549d774b$var$searchByKeyword"],"version":3,"file":"index.2f2aa8f3.js.map"}