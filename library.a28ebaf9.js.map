{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-31916566122689e0.js","src/js/loader.js","src/js/api.js","src/js/local-storage.js","src/js/add-to-watch&queue.js","src/js/movie-modal.js","node_modules/@parcel/runtime-js/lib/runtime-aee43be1704418d4.js","src/js/renderMovieCollection.js","src/js/render-from-storage.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gNQ6s\\\":\\\"library.a28ebaf9.js\\\",\\\"5vHOg\\\":\\\"nothing.e34c2d05.jpg\\\",\\\"bSbOs\\\":\\\"library.4c890955.css\\\"}\"));","const loader = document.querySelector('.loader');\n\nloader.classList.add('loader-run');\n\nwindow.addEventListener('load', function () {\n  loader.classList.remove('.loader-run');\n});\n","export { API_KEY, MAIN_URL };\n\nconst API_KEY = '7181a2b710caf29c7153fca4f71ab7d2';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\n//---Przykładowe zapytanie do api---///\n//---`${MAIN_URL}/movie/550?api_key=${API_KEY}`;---///\n\n// getTrending(page) - zaczytuje trendujące filmy z ostatniego tygodnia\n//                     (parametr page jest opcjonalny, domyślna wartość = 1);\n// getMovies(query, page) - zaczytuje filmy wg wpisanego stringa przekazanego jako parametr\n//                     (parametr page jest opcjonalny, domyślna wartość = 1);\n// getMovieByID(id) - zaczytuje dane filmu wg id;;\n// getGenres() - zaczytuje tablicę z gatunkami filmów\n//\n// Aby zaimportować API wpisz:\n//\n// import API from './api'\n//\n// Aby wywołąć pojedynczą funkcję wpisz np.:\n//\n// API.getMovies(query)\n\nconst getTrending = async (page = 1) => {\n  try {\n    const TRENDING_URL = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&page=${page}`;\n    const response = await fetch(TRENDING_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getGenres = async () => {\n  try {\n    const GENRES_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(GENRES_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovieByID = async id => {\n  try {\n    const GET_MOVIE_BY_ID_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n    const response = await fetch(GET_MOVIE_BY_ID_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovies = async (query, page = 1) => {\n  try {\n    const GET_MOVIES_QUERY_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n    const response = await fetch(GET_MOVIES_QUERY_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst API = { getTrending, getMovieByID, getMovies, getGenres };\nexport default API;\n","export const KEY_WATCHED = 'watched';\nexport const KEY_QUEUE = 'queue';\nexport function getWatchedLocalStorage() {\n  return JSON.parse(localStorage.getItem(KEY_WATCHED)) || [];\n}\nexport function getQueueLocalStorage() {\n  return JSON.parse(localStorage.getItem(KEY_QUEUE)) || [];\n}\nexport function setWatchedLocalStorage(arr) {\n  localStorage.setItem(KEY_WATCHED, JSON.stringify(arr));\n}\nexport function setQueueLocalStorage(arr) {\n  localStorage.setItem(KEY_QUEUE, JSON.stringify(arr));\n}\n","import {\n  getWatchedLocalStorage,\n  getQueueLocalStorage,\n  setWatchedLocalStorage,\n  setQueueLocalStorage,\n} from './local-storage';\nfunction onAddToWatched(id) {\n  const watched = getWatchedLocalStorage();\n  if (watched.includes(id)) {\n    return;\n  }\n  watched.push(id);\n  setWatchedLocalStorage(watched);\n}\nfunction onAddToQueue(id) {\n  const queue = getQueueLocalStorage();\n  if (queue.includes(id)) {\n    return;\n  }\n  queue.push(id);\n  setQueueLocalStorage(queue);\n}\nexport default { onAddToWatched, onAddToQueue };\n","import API from './api';\nimport adToLibrary from './add-to-watch&queue';\n\nexport function renderModal({\n  title,\n  original_title,\n  overview,\n  popularity,\n  poster_path,\n  id,\n  vote_average,\n  vote_count,\n}) {\n  const body = document.querySelector('body');\n  body.classList.add('modal-open');\n  const movieModal = document.querySelector('.movie-modal');\n\n  const markup = `\n    <div class=\"movie-modal__img-container\">\n     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"\" class=\"movie-modal__img\"/></div>\n    <div class=\"movie-modal__content\">\n      <h2 class=\"movie-modal__title\">${title}</h2>\n      <table class=\"movie-modal__table\">\n        <tr>\n          <td class=\"movie-modal__table-caption\">Vote /Votes</td>\n          <td><span class = \"movie-data__vote\">${(Math.round(vote_average * 10) / 10).toFixed(\n            1,\n          )}</span> / <span>${vote_count}</span></td>\n        </tr>\n        <tr>\n          <td class=\"movie-modal__table-caption\">Popuarity</td>\n          <td>${(Math.round(popularity * 10) / 10).toFixed(1)}</td>\n        </tr>\n        <tr>\n          <td class=\"movie-modal__table-caption\">Original Title</td>\n          <td>${original_title}</td>\n        </tr>\n        <tr>\n          <td class=\"movie-modal__table-caption\">Genre</td>\n          <td>Western</td>\n        </tr>\n      </table>\n      <div class=\"movie-modal__about\">\n        <h3 class=\"movie-modal__about-header\">ABOUT</h3>   \n        <p class=\"movie-modal__overview\">${overview}</p>\n    </div>\n      <div class=\"btn-wrapper\">\n        <button type=\"button\" class=\"button button--accent add-to-watched-btn\" id=\"addToWatchedBtn\">\n          ADD TO WATCHED\n        </button>\n        <button type=\"button\" class=\"button\" id=\"addToQueueBtn\">ADD TO QUEUE</button>\n      </div>\n    </div>\n    `;\n\n  const movieModalDOM = document.createElement('div');\n  movieModalDOM.classList.add('movie-modal__container');\n  movieModalDOM.innerHTML = markup;\n\n  movieModal.append(movieModalDOM);\n\n  const modal = document.querySelector('[data-modal]');\n  modal.classList.remove('backdrop--is-hidden');\n\n  const closeModalBtn = document.querySelector('[data-modal-close]');\n\n  closeModalBtn.addEventListener('click', () => {\n    movieModalDOM.remove();\n    modal.classList.add('backdrop--is-hidden');\n    body.classList.remove('modal-open');\n  });\n\n  const addToWatchedBtn = document.querySelector('.add-to-watched-btn');\n  addToWatchedBtn.addEventListener('click', () => adToLibrary.onAddToWatched(id));\n\n  const addToQueueBtn = document.querySelector('#addToQueueBtn');\n  addToQueueBtn.addEventListener('click', () => adToLibrary.onAddToQueue(id));\n}\n\n// asss\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"5vHOg\")).toString();","// Funkcja renderMovieCollection(movieCollection) przyjmuje za parametr tablicę\n// z danymi filmów i renderuje ją do div o klasie \"movie-collection\"\n//\n// W kolejnej wersji zostanie dodane:\n// - renderowanie na karcie filmu oceny, która jest widoczna w zakładce MyLibrary,\n//   natomiast na stronie głównej zgodnie z układem na Figmie będzie ukryta,\n// - parsowanie genres do stringa - na razie jest string \"na sztywno\"\n//\n// Aby zaimportować funkcję wpisz:\n//\n// import renderMovieCollection from './renderMovieCollection';\n\nimport API from './api';\nimport { renderModal } from './movie-modal';\n\nconst renderMovieCollection = movieCollection => {\n  // console.log(movieCollection);\n  const movieCollectionDOM = document.querySelector('.movie-collection');\n\n  const { id, title, poster_path, release_date } = movieCollection;\n\n  // console.log(movieCollectionDOM);\n\n  const markup = movieCollection\n    .map(\n      ({\n        id,\n        title,\n        poster_path,\n        release_date,\n        vote_average,\n      }) => `<div class=\"movie-card\" data-id=\"${id}\">\n      <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"\" class=\"movie-card__img\"/>\n      <div class=\"movie-data\">\n        <p class=\"movie-data__title\">${title}</p>\n        <p class=\"movie-data__info\">\n          <span class=\"movie-data__genre\">Drama, Action </span> |\n          <span class=\"movie-data__year\">${new Date(release_date).getFullYear()}</span>\n          <span class = \"movie-data__vote\">${(Math.round(vote_average * 10) / 10).toFixed(1)}</span>\n        </p>\n      </div>\n    </div>\n`,\n    )\n    .join('');\n  // console.log(markup);\n\n  movieCollectionDOM.innerHTML = markup;\n\n  const movieCardsArr = document.querySelectorAll('.movie-card');\n  movieCardsArr.forEach(movieCard => {\n    movieCard.addEventListener('click', event => {\n      const movieID = event.currentTarget.dataset.id;\n      API.getMovieByID(movieID)\n        .then(data => {\n          // console.log(data);\n          renderModal(data);\n        })\n        .catch(error => console.log(error));\n    });\n  });\n};\n\nexport default renderMovieCollection;\n","import nothing from '../images/nothing.jpg';\nimport renderMovieCollection from './renderMovieCollection';\nimport { getWatchedLocalStorage, getQueueLocalStorage } from './local-storage';\nimport API from './api';\nimport './movie-modal';\nconst refs = {\n  watchedRef: document.querySelector('#watched-btn'),\n  queueRef: document.querySelector('#queue-btn'),\n  movieCollectionDOM: document.querySelector('.movie-collection'),\n};\nrefs.watchedRef.addEventListener('click', showWatched);\nrefs.queueRef.addEventListener('click', showQueue);\nfunction showWatched() {\n  const watched = getWatchedLocalStorage();\n  if (watched.length === 0) {\n    refs.movieCollectionDOM.innerHTML = `\n      <li class=\"nothing\">\n        <img src=\"${nothing}\" alt=\"There's nothing to see here\" />\n      </li>`;\n    return;\n  }\n  Promise.all(watched.map(id => API.getMovieByID(id)))\n    .then(movies => renderMovieCollection(movies))\n    .catch(error => console.log(error));\n}\nfunction showQueue() {\n  const queue = getQueueLocalStorage();\n  if (queue.length === 0) {\n    refs.movieCollectionDOM.innerHTML = `\n      <li class=\"nothing\">\n        <img src=\"${nothing}\" alt=\"There's nothing to see here\" />\n      </li>`;\n    return;\n  }\n  Promise.all(queue.map(id => API.getMovieByID(id)))\n    .then(movies => renderMovieCollection(movies))\n    .catch(error => console.log(error));\n}\nexport default { showWatched, showQueue };\n"],"names":["$d49cb2d7b03f6a77$export$6503ec6e8aabbaf","$d49cb2d7b03f6a77$export$f7ad0328861e2f03","$d49cb2d7b03f6a77$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$b6e5d84fbce03de8$var$loader","document","querySelector","classList","add","window","addEventListener","remove","$ffc195e62a2c7bf2$export$a9861bd62f48e142","$ffc195e62a2c7bf2$export$2e2bcd8739ae039","async","page","TRENDING_URL","response","fetch","json","error","console","log","message","GET_MOVIE_BY_ID_URL","query","GET_MOVIES_QUERY_URL","GENRES_URL","$80b576907cf5d791$export$bf348ba91bbfa858","$80b576907cf5d791$export$18da41cc526d0bf2","$80b576907cf5d791$export$dd765f2d382efdcf","localStorage","getItem","$80b576907cf5d791$export$4265d6ef71196fae","$c034acc375419757$export$2e2bcd8739ae039","watched","arr","includes","push","setItem","stringify","queue","$6a92d9ea7981a1dd$export$69bf191433722f78","title","original_title","overview","popularity","poster_path","vote_average","vote_count","body","movieModal","markup","Math","round","toFixed","movieModalDOM","createElement","innerHTML","append","modal","onAddToWatched","onAddToQueue","$2dd75d4fa34fac58$exports","URL","resolve","import","meta","url","toString","$043545bfa8825083$export$2e2bcd8739ae039","movieCollection","movieCollectionDOM","release_date","map","Date","getFullYear","join","querySelectorAll","forEach","movieCard","event","movieID","currentTarget","dataset","getMovieByID","then","data","catch","$1f9aa57df6b6a369$var$refs","watchedRef","queueRef","$1f9aa57df6b6a369$var$showWatched","Promise","all","movies","$parcel$interopDefault","$1f9aa57df6b6a369$var$showQueue"],"version":3,"file":"library.a28ebaf9.js.map"}