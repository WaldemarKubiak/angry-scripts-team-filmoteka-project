{"mappings":"AAAAA,OAAOC,iBAAiB,QAAQ,KAC9B,MAAMC,EAASC,SAASC,cAAc,WAEtCF,EAAOG,UAAUC,IAAI,iBAErBJ,EAAOD,iBAAiB,iBAAiB,KACvCE,SAASI,KAAKC,YAAY,YAC5B,ICPF,MAAMC,EAAU,mC,IAoEhBC,EADY,C,YA7CQC,UAClB,IACE,MAAMC,EAAe,4DAA4DH,IAC3EI,QAAiBC,MAAMF,GAE7B,aADmBC,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,aAcmBR,MAAMS,IACzB,IACE,MAAMC,EAAsB,sCAAsCD,aAAcX,IAC1EI,QAAiBC,MAAMO,GACvBC,QAAaT,EAASE,OAE5B,OADAE,QAAQC,IAAI,SAAUI,GACfA,CAGT,CAFE,MAAON,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,UAGgBR,MAAMY,IACtB,IACE,MAAMC,EAAuB,qDAAqDf,WAAiBc,IAC7FV,QAAiBC,MAAMU,GAE7B,aADmBX,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,UA/BgBR,UAChB,IACE,MAAMc,EAAa,yDAAyDhB,mBACtEI,QAAiBC,MAAMW,GAE7B,aADmBZ,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,I,ICPFO,EAtB8BC,IAC5B,MAAMC,EAAqBzB,SAASC,cAAc,qBAE5CyB,EAASF,EACZG,KACC,EAACV,GAAEA,EAAEW,MAAEA,EAAKC,YAAEA,EAAWC,aAAEA,KAAmB,oCAAoCb,uDACvCY,6GAEVD,2JAGI,IAAIG,KAAKD,GAAcE,mEAM7DC,KAAK,IAERR,EAAmBS,UAAYR,CAAA,EC5BjCnB,EAAI4B,cACDC,MAAKjB,GAAQA,EAAKkB,UAClBD,KAAKb,GACLe,OAAMzB,GAASC,QAAQD,MAAMA,EAAMG,WCHrC,MACC,MAAMuB,EAAO,CACXC,cAAexC,SAASC,cAAc,qBACtCwC,cAAezC,SAASC,cAAc,sBACtCyC,MAAO1C,SAASC,cAAc,iBAGhCsC,EAAKC,cAAc1C,iBAAiB,SAGpC,WAGEyC,EAAKG,MAAMxC,UAAUyC,OAAO,sBAC9B,IANAJ,EAAKE,cAAc3C,iBAAiB,SAQpC,WACEyC,EAAKG,MAAMxC,UAAUC,IAAI,sBAC3B,GACF,EAnBC,GAqBDI,EAAIqC,aAvBU,UAuBYR,MAE1B,UAAqBR,MAAEA,EAAKiB,SAAEA,EAAQhB,YAAEA,IACtC,MAAMiB,EAAa9C,SAASC,cAAc,gBAE1Ca,QAAQC,IAAI,UAAWa,EAAO,UAAWiB,GAEzC,MAAMnB,EAAS,iGAE+BG,4HAETD,yJAGIiB,4SAWnCE,EAAgB/C,SAASgD,cAAc,OAC7CD,EAAc7C,UAAUC,IAAI,0BAC5B4C,EAAcb,UAAYR,EAE1BoB,EAAWG,OAAOF,EACpB","sources":["src/js/loader.js","src/js/api.js","src/js/renderMovieCollection.js","src/js/main-section-home.js","src/js/movie-modal.js"],"sourcesContent":["window.addEventListener('load', () => {\n  const loader = document.querySelector('.loader');\n\n  loader.classList.add('loader-hidden');\n\n  loader.addEventListener('transitionend', () => {\n    document.body.removeChild('loader');\n  });\n});\n","const API_KEY = '7181a2b710caf29c7153fca4f71ab7d2';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\n//---Przykładowe zapytanie do api---///\n//---`${MAIN_URL}/movie/550?api_key=${API_KEY}`;---///\n\n// getTrending() - zaczytuje trendujące filmy z ostatniego tygodnia,\n// getMovieByID(id) - zaczytuje dane filmu wg id,\n// getMovies(query) - zaczytuje filmy wg wpisanego stringa przekazanego jako parametr,\n// getGenres() - zaczytuje tablicę z gatunkami filmów\n//\n// W następnej wersji do pierwszych dwóch funkcji dodam parametr page (z domyślna wartością = 1)\n// tak, aby funkcji można było użyc do paginacji\n//\n// Aby zaimportować API wpisz:\n//\n// import API from './api'\n//\n// Aby wywołąć pojedynczą funkcję wpisz np:\n//\n// API.getMovies(query)\n\nconst getTrending = async () => {\n  try {\n    const TRENDING_URL = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    const response = await fetch(TRENDING_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getGenres = async () => {\n  try {\n    const GENRES_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(GENRES_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovieByID = async id => {\n  try {\n    const GET_MOVIE_BY_ID_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n    const response = await fetch(GET_MOVIE_BY_ID_URL);\n    const data = await response.json();\n    console.log('Data: ', data);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovies = async query => {\n  try {\n    const GET_MOVIES_QUERY_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n    const response = await fetch(GET_MOVIES_QUERY_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst API = { getTrending, getMovieByID, getMovies, getGenres };\nexport default API;\n","// Funkcja renderMovieCollection(movieCollection) przyjmuje za parametr tablicę\n// z danymi filmów i renderuje ją do div o klasie \"movie-collection\"\n//\n// W kolejnej wersji zostanie dodane:\n// - renderowanie na karcie filmu oceny, która jest widoczna w zakładce MyLibrary,\n//   natomiast na stronie głównej zgodnie z układem na Figmie będzie ukryta,\n// - parsowanie genres do stringa - na razie jest string \"na sztywno\"\n//\n// Aby zaimportować funkcję wpisz:\n//\n// import renderMovieCollection from './renderMovieCollection';\n\nconst renderMovieCollection = movieCollection => {\n  const movieCollectionDOM = document.querySelector('.movie-collection');\n\n  const markup = movieCollection\n    .map(\n      ({ id, title, poster_path, release_date }) => `<div class=\"movie-card\" data-id=\"${id}\">\n      <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"\" class=\"movie-card__img\"/>\n      <div class=\"movie-data\">\n        <p class=\"movie-data__title\">${title}</p>\n        <p class=\"movie-data__info\">\n          <span class=\"movie-data__genre\">Drama, Action</span> |\n          <span class=\"movie-data__year\">${new Date(release_date).getFullYear()}</span>\n        </p>\n      </div>\n    </div>\n`,\n    )\n    .join('');\n\n  movieCollectionDOM.innerHTML = markup;\n};\n\nexport default renderMovieCollection;\n","import API from './api';\nimport renderMovieCollection from './renderMovieCollection';\n\nAPI.getTrending()\n  .then(data => data.results)\n  .then(renderMovieCollection)\n  .catch(error => console.error(error.message));\n","import API from './api';\nlet movieID = '640146';\n\n(() => {\n  const refs = {\n    openModalCard: document.querySelector('.movie-collection'), // do zmiany, jak będziemy mieli kolekcję filmów a nie jedna kartę\n    closeModalBtn: document.querySelector('[data-modal-close]'),\n    modal: document.querySelector('[data-modal]'),\n  };\n\n  refs.openModalCard.addEventListener('click', openModal); // do zmiany, jak będziemy mieli kolekcję filmów a nie jedna kartę\n  refs.closeModalBtn.addEventListener('click', closeModal);\n\n  function openModal() {\n    // zaczytać z eventu id filmu - atrybut data-id\n\n    refs.modal.classList.remove('backdrop--is-hidden');\n  }\n\n  function closeModal() {\n    refs.modal.classList.add('backdrop--is-hidden');\n  }\n})();\n\nAPI.getMovieByID(movieID).then(renderModal);\n\nfunction renderModal({ title, overview, poster_path }) {\n  const movieModal = document.querySelector('.movie-modal');\n\n  console.log('Title: ', title, 'About: ', overview);\n\n  const markup = `\n    <div class=\"movie-modal__img-container\">\n     <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"\" class=\"movie-modal__img\"/></div>\n    <div class=\"movie-modal__content\">\n      <h2 class=\"movie-modal__title\">${title}</h2>\n      <div class=\"movie-modal__about\">\n        <h3 class=\"movie-modal__about-header\">ABOUT</h3>   \n        <p class=\"movie-modal__overview\">${overview}</p>\n    </div>\n      <div class=\"btn-wrapper\">\n        <button type=\"button\" class=\"button button--accent\" id=\"addToWatchedBtn\">\n          ADD TO WATCHED\n        </button>\n        <button type=\"button\" class=\"button\" id=\"addToQueueBtn\">ADD TO QUEUE</button>\n      </div>\n    </div>\n    `;\n\n  const movieModalDOM = document.createElement('div');\n  movieModalDOM.classList.add('movie-modal__container');\n  movieModalDOM.innerHTML = markup;\n\n  movieModal.append(movieModalDOM);\n}\n"],"names":["window","addEventListener","loader","document","querySelector","classList","add","body","removeChild","$ffc195e62a2c7bf2$var$API_KEY","$ffc195e62a2c7bf2$export$2e2bcd8739ae039","async","TRENDING_URL","response","fetch","json","error","console","log","message","id","GET_MOVIE_BY_ID_URL","data","query","GET_MOVIES_QUERY_URL","GENRES_URL","$043545bfa8825083$export$2e2bcd8739ae039","movieCollection","movieCollectionDOM","markup","map","title","poster_path","release_date","Date","getFullYear","join","innerHTML","getTrending","then","results","catch","refs","openModalCard","closeModalBtn","modal","remove","getMovieByID","overview","movieModal","movieModalDOM","createElement","append"],"version":3,"file":"index.85a4bfc1.js.map"}