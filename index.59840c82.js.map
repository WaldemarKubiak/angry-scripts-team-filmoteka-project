{"mappings":"AAAA,MAAMA,EAAU,mC,ICkChBC,EAtB8BC,IAC5B,MAAMC,EAAqBC,SAASC,cAAc,qBAE5CC,EAASJ,EACZK,KACC,EAACC,GAAEA,EAAEC,MAAEA,EAAKC,YAAEA,EAAWC,aAAEA,KAAmB,oCAAoCH,uDACvCE,6GAEVD,2JAGI,IAAIG,KAAKD,GAAcE,mEAM7DC,KAAK,IAERX,EAAmBY,UAAYT,CAAA,GDoCrB,C,YA7CQU,UAClB,IACE,MAAMC,EAAe,4DAA4DjB,IAC3EkB,QAAiBC,MAAMF,GAE7B,aADmBC,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,aAcmBR,MAAMR,IACzB,IACE,MAAMiB,EAAsB,sCAAsCjB,aAAcR,IAC1EkB,QAAiBC,MAAMM,GACvBC,QAAaR,EAASE,OAE5B,OADAE,QAAQC,IAAI,SAAUG,GACfA,CAGT,CAFE,MAAOL,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,UAGgBR,MAAMW,IACtB,IACE,MAAMC,EAAuB,qDAAqD5B,WAAiB2B,IAC7FT,QAAiBC,MAAMS,GAE7B,aADmBV,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,G,UA/BgBR,UAChB,IACE,MAAMa,EAAa,yDAAyD7B,mBACtEkB,QAAiBC,MAAMU,GAE7B,aADmBX,EAASE,MAI9B,CAFE,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,QACpB,KEtCEM,cACDC,MAAKL,GAAQA,EAAKM,UAClBD,KAAK9B,GACLgC,OAAMZ,GAASC,QAAQD,MAAMA,EAAMG","sources":["src/js/api.js","src/js/renderMovieCollection.js","src/js/main-section-home.js"],"sourcesContent":["const API_KEY = '7181a2b710caf29c7153fca4f71ab7d2';\nconst MAIN_URL = 'https://api.themoviedb.org/3';\n\n//---Przykładowe zapytanie do api---///\n//---`${MAIN_URL}/movie/550?api_key=${API_KEY}`;---///\n\n// getTrending() - zaczytuje trendujące filmy z ostatniego tygodnia,\n// getMovieByID(id) - zaczytuje dane filmu wg id,\n// getMovies(query) - zaczytuje filmy wg wpisanego stringa przekazanego jako parametr,\n// getGenres() - zaczytuje tablicę z gatunkami filmów\n//\n// W następnej wersji do pierwszych dwóch funkcji dodam parametr page (z domyślna wartością = 1)\n// tak, aby funkcji można było użyc do paginacji\n//\n// Aby zaimportować API wpisz:\n//\n// import API from './api'\n//\n// Aby wywołąć pojedynczą funkcję wpisz np:\n//\n// API.getMovies(query)\n\nconst getTrending = async () => {\n  try {\n    const TRENDING_URL = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    const response = await fetch(TRENDING_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getGenres = async () => {\n  try {\n    const GENRES_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(GENRES_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovieByID = async id => {\n  try {\n    const GET_MOVIE_BY_ID_URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`;\n    const response = await fetch(GET_MOVIE_BY_ID_URL);\n    const data = await response.json();\n    console.log('Data: ', data);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst getMovies = async query => {\n  try {\n    const GET_MOVIES_QUERY_URL = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`;\n    const response = await fetch(GET_MOVIES_QUERY_URL);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nconst API = { getTrending, getMovieByID, getMovies, getGenres };\nexport default API;\n","// Funkcja renderMovieCollection(movieCollection) przyjmuje za parametr tablicę\n// z danymi filmów i renderuje ją do div o klasie \"movie-collection\"\n//\n// W kolejnej wersji zostanie dodane:\n// - renderowanie na karcie filmu oceny, która jest widoczna w zakładce MyLibrary,\n//   natomiast na stronie głównej zgodnie z układem na Figmie będzie ukryta,\n// - parsowanie genres do stringa - na razie jest string \"na sztywno\"\n//\n// Aby zaimportować funkcję wpisz:\n//\n// import renderMovieCollection from './renderMovieCollection';\n\nconst renderMovieCollection = movieCollection => {\n  const movieCollectionDOM = document.querySelector('.movie-collection');\n\n  const markup = movieCollection\n    .map(\n      ({ id, title, poster_path, release_date }) => `<div class=\"movie-card\" data-id=\"${id}\">\n      <img src=\"https://image.tmdb.org/t/p/w400${poster_path}\" alt=\"\" class=\"movie-card__img\"/>\n      <div class=\"movie-data\">\n        <p class=\"movie-data__title\">${title}</p>\n        <p class=\"movie-data__info\">\n          <span class=\"movie-data__genre\">Drama, Action</span> |\n          <span class=\"movie-data__year\">${new Date(release_date).getFullYear()}</span>\n        </p>\n      </div>\n    </div>\n`,\n    )\n    .join('');\n\n  movieCollectionDOM.innerHTML = markup;\n};\n\nexport default renderMovieCollection;\n","import API from './api';\nimport renderMovieCollection from './renderMovieCollection';\n\nAPI.getTrending()\n  .then(data => data.results)\n  .then(renderMovieCollection)\n  .catch(error => console.error(error.message));\n"],"names":["$ffc195e62a2c7bf2$var$API_KEY","$043545bfa8825083$export$2e2bcd8739ae039","movieCollection","movieCollectionDOM","document","querySelector","markup","map","id","title","poster_path","release_date","Date","getFullYear","join","innerHTML","async","TRENDING_URL","response","fetch","json","error","console","log","message","GET_MOVIE_BY_ID_URL","data","query","GET_MOVIES_QUERY_URL","GENRES_URL","getTrending","then","results","catch"],"version":3,"file":"index.59840c82.js.map"}